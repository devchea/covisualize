{"ast":null,"code":"import _toConsumableArray from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/richardchea/development/code/covisualize/src/Dashboard.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\nimport defaultMarkers from './markers';\n\nfunction getTooltipContent(marker) {\n  return \"CITY: \".concat(marker.city, \" (Value: \").concat(marker.value, \")\");\n}\n\nexport default function Globe() {\n  var randomMarkers = defaultMarkers.map(function (marker) {\n    return _objectSpread({}, marker, {\n      value: Math.floor(Math.random() * 0.9)\n    });\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      event = _useState4[0],\n      setEvent = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      details = _useState6[0],\n      setDetails = _useState6[1];\n\n  function onClickMarker(marker, markerObject, event) {\n    setEvent({\n      type: 'CLICK',\n      marker: marker,\n      markerObjectID: markerObject.uuid,\n      pointerEventPosition: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    });\n    setDetails(getTooltipContent(marker));\n  }\n\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates: previousCoordinates,\n      pointerEventPosition: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    });\n    setDetails(null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '98vw',\n      height: '70vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactGlobe, {\n    markers: markers,\n    markerOptions: {\n      getTooltipContent: getTooltipContent\n    },\n    onClickMarker: onClickMarker,\n    onDefocus: onDefocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), details && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: 'white',\n      position: 'absolute',\n      fontSize: 20,\n      top: 0,\n      right: 0,\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, details), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"EVENT: type=\", event.type, \", position=\", JSON.stringify(event.pointerEventPosition), \")\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setMarkers(randomMarkers);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Randomize markers\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: markers.length === 0,\n    onClick: function onClick() {\n      return setMarkers([]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Clear markers\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: markers.length === randomMarkers.length,\n    onClick: function onClick() {\n      return setMarkers([].concat(_toConsumableArray(markers), [randomMarkers[markers.length]]));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Add marker\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: markers.length === 0,\n    onClick: function onClick() {\n      return setMarkers(markers.slice(0, markers.length - 1));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Remove marker\"));\n}","map":{"version":3,"sources":["/Users/richardchea/development/code/covisualize/src/Dashboard.js"],"names":["React","useState","ReactDOM","ReactGlobe","defaultMarkers","getTooltipContent","marker","city","value","Globe","randomMarkers","map","Math","floor","random","markers","setMarkers","event","setEvent","details","setDetails","onClickMarker","markerObject","type","markerObjectID","uuid","pointerEventPosition","x","clientX","y","clientY","onDefocus","previousCoordinates","width","height","background","position","fontSize","top","right","padding","JSON","stringify","length","slice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\n\nimport defaultMarkers from './markers';\n\nfunction getTooltipContent(marker) {\n  return `CITY: ${marker.city} (Value: ${marker.value})`;\n}\n\nexport default function Globe() {\n  const randomMarkers = defaultMarkers.map(marker => ({\n    ...marker,\n    value: Math.floor(Math.random() * 0.9),\n  }));\n  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null);\n  function onClickMarker(marker, markerObject, event) {\n    setEvent({\n      type: 'CLICK',\n      marker,\n      markerObjectID: markerObject.uuid,\n      pointerEventPosition: { x: event.clientX, y: event.clientY },\n    });\n    setDetails(getTooltipContent(marker));\n  }\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates,\n      pointerEventPosition: { x: event.clientX, y: event.clientY },\n    });\n    setDetails(null);\n  }\n\n  return (\n    <div style={{ width: '98vw', height: '70vh' }}>\n      <ReactGlobe\n        markers={markers}\n        markerOptions={{\n          getTooltipContent,\n        }}\n        onClickMarker={onClickMarker}\n        onDefocus={onDefocus}\n      />\n      {details && (\n        <div\n          style={{\n            background: 'white',\n            position: 'absolute',\n            fontSize: 20,\n            top: 0,\n            right: 0,\n            padding: 12,\n          }}>\n          <p>{details}</p>\n          <p>\n            EVENT: type={event.type}, position=\n            {JSON.stringify(event.pointerEventPosition)})\n          </p>\n        </div>\n      )}\n      <button onClick={() => setMarkers(randomMarkers)}>\n        Randomize markers\n      </button>\n      <button disabled={markers.length === 0} onClick={() => setMarkers([])}>\n        Clear markers\n      </button>\n      <button\n        disabled={markers.length === randomMarkers.length}\n        onClick={() => setMarkers([...markers, randomMarkers[markers.length]])}>\n        Add marker\n      </button>\n      <button\n        disabled={markers.length === 0}\n        onClick={() => setMarkers(markers.slice(0, markers.length - 1))}>\n        Remove marker\n      </button>\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}