{"ast":null,"code":"import _slicedToArray from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/richardchea/development/code/covisualize/src/Globe.js\";\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\nimport Button from \"@material-ui/core/Button\";\nimport defaultMarkers from './Markers';\nimport Box from \"@material-ui/core/Box\";\nimport GpsFixedOutlinedIcon from \"@material-ui/icons/GpsFixedOutlined\";\n\nfunction getTooltipContent(marker) {\n  return \"\".concat(marker.city);\n}\n\nfunction onClickMarker(marker, markerObject, event) {\n  setEvent({\n    type: 'CLICK',\n    marker: marker,\n    markerObjectID: markerObject.uuid,\n    pointerEventPosition: {\n      x: event.clientX,\n      y: event.clientY\n    }\n  });\n  setDetails(getTooltipContent(marker));\n  fetchStats();\n}\n\nvar Globe = function Globe() {\n  var allMarkers = defaultMarkers.map(function (marker) {\n    return _objectSpread({}, marker, {\n      color: 'red'\n    });\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      event = _useState4[0],\n      setEvent = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      details = _useState6[0],\n      setDetails = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stats = _useState8[0],\n      setStats = _useState8[1]; // useEffect(() => {\n  //   fetchStats()\n  // })\n  // function fetchStats() {\n  //   // fetch('https://api.covid19api.com/total/country/south-africa/status/confirmed?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z')\n  //   //   .then(res => res.json())\n  //   //   .then(stats => {\n  //   //     console.log(stats)\n  //   //     // setStats(stats)\n  //   //   })\n  //   console.log('hi')\n  // }\n  // componentDidMount(){\n  //   console.log('hi')\n  // }\n\n\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates: previousCoordinates,\n      pointerEventPosition: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    });\n    setDetails(null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"60vh\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactGlobe, {\n    markers: markers,\n    markerOptions: {\n      getTooltipContent: getTooltipContent,\n      radiusScaleRange: [0.009, 0.009]\n    },\n    onClickMarker: onClickMarker,\n    onDefocus: onDefocus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), details && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"white\",\n      position: \"absolute\",\n      fontSize: 18,\n      top: 0,\n      left: 0,\n      padding: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, details), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Show Covid stats here from the api\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setMarkers(allMarkers);\n    },\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Show markers\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: markers.length === 0,\n    onClick: function onClick() {\n      return setMarkers([]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Clear markers\"))));\n};\n\nexport default Globe;","map":{"version":3,"sources":["/Users/richardchea/development/code/covisualize/src/Globe.js"],"names":["React","useState","ReactDOM","ReactGlobe","Button","defaultMarkers","Box","GpsFixedOutlinedIcon","getTooltipContent","marker","city","onClickMarker","markerObject","event","setEvent","type","markerObjectID","uuid","pointerEventPosition","x","clientX","y","clientY","setDetails","fetchStats","Globe","allMarkers","map","color","markers","setMarkers","details","stats","setStats","onDefocus","previousCoordinates","width","height","radiusScaleRange","background","position","fontSize","top","left","padding","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\nimport Button from \"@material-ui/core/Button\";\nimport defaultMarkers from './Markers';\nimport Box from \"@material-ui/core/Box\";\nimport GpsFixedOutlinedIcon from \"@material-ui/icons/GpsFixedOutlined\";\n\n\n\n\nfunction getTooltipContent(marker) {\n  return `${marker.city}`;\n}\n\nfunction onClickMarker(marker, markerObject, event) {\n  setEvent({\n    type: 'CLICK',\n    marker,\n    markerObjectID: markerObject.uuid,\n    pointerEventPosition: {\n      x: event.clientX,\n      y: event.clientY\n    },\n  });\n  setDetails(getTooltipContent(marker));\n  fetchStats()\n}\n\n\nconst Globe = () => {\n  const allMarkers = defaultMarkers.map(marker => ({\n    ...marker,\n    color: 'red'\n  }));\n  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null);\n  const [stats, setStats] = useState(null);\n  // useEffect(() => {\n  //   fetchStats()\n  // })\n  // function fetchStats() {\n  //   // fetch('https://api.covid19api.com/total/country/south-africa/status/confirmed?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z')\n  //   //   .then(res => res.json())\n  //   //   .then(stats => {\n  //   //     console.log(stats)\n  //   //     // setStats(stats)\n  //   //   })\n  //   console.log('hi')\n  // }\n  // componentDidMount(){\n  //   console.log('hi')\n  // }\n\n  \n\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates,\n      pointerEventPosition: { x: event.clientX, y: event.clientY },\n    });\n    setDetails(null);\n  }\n\n  return (\n    <div style={{ width: \"100vw\", height: \"60vh\" }}>\n      <ReactGlobe\n        markers={markers}\n        markerOptions={{\n          getTooltipContent,\n          radiusScaleRange: [0.009, 0.009],\n        }}\n        onClickMarker={onClickMarker}\n        onDefocus={onDefocus}\n      />\n      {details && (\n        <div\n          style={{\n            background: \"white\",\n            position: \"absolute\",\n            fontSize: 18,\n            top: 0,\n            left: 0,\n            padding: 12,\n          }}\n        >\n          <p>{details}</p>\n          <p>Show Covid stats here from the api</p>\n        </div>\n      )}\n      <div>\n        <Box>\n          <Button\n            onClick={() => setMarkers(allMarkers)}\n            color=\"primary\"\n          >\n            Show markers\n          </Button>\n          <Button\n            disabled={markers.length === 0}\n            onClick={() => setMarkers([])}\n          >\n            Clear markers\n          </Button>\n        </Box>\n      </div>\n    </div>\n  );\n}\n\nexport default Globe"]},"metadata":{},"sourceType":"module"}