{"ast":null,"code":"import _slicedToArray from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/richardchea/development/code/covisualize/src/Dashboard.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport defaultMarkers from './markers';\nvar useStyles = makeStyles(function () {\n  return {\n    buttonStyles: {\n      flex: 1,\n      color: 'primary'\n    }\n  };\n});\n\nfunction getTooltipContent(marker) {\n  return \"\".concat(marker.city);\n}\n\nfunction fetchStats() {\n  // fetch('https://api.covid19api.com/total/country/south-africa/status/confirmed?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z')\n  //   .then(res => res.json())\n  //   .then(stats => {\n  //     console.log(stats)\n  //     // setStats(stats)\n  //   })\n  console.log('hi');\n}\n\nexport default function Globe() {\n  var classes = useStyles();\n  var allMarkers = defaultMarkers.map(function (marker) {\n    return _objectSpread({}, marker, {\n      value: 1\n    });\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      event = _useState4[0],\n      setEvent = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      details = _useState6[0],\n      setDetails = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stats = _useState8[0],\n      setStats = _useState8[1];\n\n  function onClickMarker(marker, markerObject, event) {\n    setEvent({\n      type: 'CLICK',\n      marker: marker,\n      markerObjectID: markerObject.uuid,\n      pointerEventPosition: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    });\n    setDetails(getTooltipContent(marker));\n    fetchStats();\n  }\n\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates: previousCoordinates,\n      pointerEventPosition: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    });\n    setDetails(null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: '#cfe8fc',\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/richardchea/development/code/covisualize/src/Dashboard.js"],"names":["React","useState","ReactDOM","ReactGlobe","Button","makeStyles","Grid","CssBaseline","Typography","Container","defaultMarkers","useStyles","buttonStyles","flex","color","getTooltipContent","marker","city","fetchStats","console","log","Globe","classes","allMarkers","map","value","markers","setMarkers","event","setEvent","details","setDetails","stats","setStats","onClickMarker","markerObject","type","markerObjectID","uuid","pointerEventPosition","x","clientX","y","clientY","onDefocus","previousCoordinates","backgroundColor","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n\n\nimport defaultMarkers from './markers';\n\nconst useStyles = makeStyles(() => ({\n  buttonStyles: {\n    flex: 1,\n    color: 'primary'\n  }\n}))\n\nfunction getTooltipContent(marker) {\n  return `${marker.city}`;\n}\n\nfunction fetchStats() {\n  // fetch('https://api.covid19api.com/total/country/south-africa/status/confirmed?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z')\n  //   .then(res => res.json())\n  //   .then(stats => {\n  //     console.log(stats)\n  //     // setStats(stats)\n  //   })\n    console.log('hi')\n}\n\nexport default function Globe() {\n  const classes = useStyles()\n  const allMarkers = defaultMarkers.map(marker => ({\n    ...marker,\n    value: 1,\n  }));\n  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null);\n  const [stats, setStats] = useState(null);\n\n  function onClickMarker(marker, markerObject, event) {\n    setEvent({\n      type: 'CLICK',\n      marker,\n      markerObjectID: markerObject.uuid,\n      pointerEventPosition: { x: event.clientX, y: event.clientY },\n    });\n    setDetails(getTooltipContent(marker));\n    fetchStats()\n  }\n\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates,\n      pointerEventPosition: { x: event.clientX, y: event.clientY },\n    });\n    setDetails(null);\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\n      </Container>\n    </React.Fragment>\n    \n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}