{"ast":null,"code":"import _slicedToArray from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/richardchea/development/code/covisualize/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/richardchea/development/code/covisualize/src/Dashboard.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\nimport defaultMarkers from './markers';\n\nfunction getTooltipContent(marker) {\n  return \"\".concat(marker.city);\n}\n\nfunction fetchStats() {\n  // fetch('https://api.covid19api.com/total/country/south-africa/status/confirmed?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z')\n  //   .then(res => res.json())\n  //   .then(stats => {\n  //     console.log(stats)\n  //     // setStats(stats)\n  //   })\n  console.log('hi');\n}\n\nexport default function Globe() {\n  var allMarkers = defaultMarkers.map(function (marker) {\n    return _objectSpread({}, marker, {\n      value: 1\n    });\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      event = _useState4[0],\n      setEvent = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      details = _useState6[0],\n      setDetails = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stats = _useState8[0],\n      setStats = _useState8[1];\n\n  function onClickMarker(marker, markerObject, event) {\n    setEvent({\n      type: 'CLICK',\n      marker: marker,\n      markerObjectID: markerObject.uuid,\n      pointerEventPosition: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    });\n    setDetails(getTooltipContent(marker));\n    fetchStats();\n  }\n\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates: previousCoordinates,\n      pointerEventPosition: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    });\n    setDetails(null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '98vw',\n      height: '70vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactGlobe, {\n    markers: markers,\n    markerOptions: {\n      getTooltipContent: getTooltipContent\n    },\n    onClickMarker: onClickMarker,\n    onDefocus: onDefocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), details && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: 'white',\n      position: 'absolute',\n      fontSize: 20,\n      top: 0,\n      right: 0,\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, details), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"EVENT: type=\", event.type, \", position=\", JSON.stringify(event.pointerEventPosition), \")\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setMarkers(allMarkers);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Show markers\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: markers.length === 0,\n    onClick: function onClick() {\n      return setMarkers([]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Clear markers\"));\n}","map":{"version":3,"sources":["/Users/richardchea/development/code/covisualize/src/Dashboard.js"],"names":["React","useState","ReactDOM","ReactGlobe","defaultMarkers","getTooltipContent","marker","city","fetchStats","console","log","Globe","allMarkers","map","value","markers","setMarkers","event","setEvent","details","setDetails","stats","setStats","onClickMarker","markerObject","type","markerObjectID","uuid","pointerEventPosition","x","clientX","y","clientY","onDefocus","previousCoordinates","width","height","background","position","fontSize","top","right","padding","JSON","stringify","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,cAAP,MAA2B,WAA3B;;AAEA,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AACjC,mBAAUA,MAAM,CAACC,IAAjB;AACD;;AAED,SAASC,UAAT,GAAsB;AACpB;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,MAAMC,UAAU,GAAGR,cAAc,CAACS,GAAf,CAAmB,UAAAP,MAAM;AAAA,6BACvCA,MADuC;AAE1CQ,MAAAA,KAAK,EAAE;AAFmC;AAAA,GAAzB,CAAnB;;AAD8B,kBAKAb,QAAQ,CAAC,EAAD,CALR;AAAA;AAAA,MAKvBc,OALuB;AAAA,MAKdC,UALc;;AAAA,mBAMJf,QAAQ,CAAC,IAAD,CANJ;AAAA;AAAA,MAMvBgB,KANuB;AAAA,MAMhBC,QANgB;;AAAA,mBAOAjB,QAAQ,CAAC,IAAD,CAPR;AAAA;AAAA,MAOvBkB,OAPuB;AAAA,MAOdC,UAPc;;AAAA,mBAQJnB,QAAQ,CAAC,IAAD,CARJ;AAAA;AAAA,MAQvBoB,KARuB;AAAA,MAQhBC,QARgB;;AAU9B,WAASC,aAAT,CAAuBjB,MAAvB,EAA+BkB,YAA/B,EAA6CP,KAA7C,EAAoD;AAClDC,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE,OADC;AAEPnB,MAAAA,MAAM,EAANA,MAFO;AAGPoB,MAAAA,cAAc,EAAEF,YAAY,CAACG,IAHtB;AAIPC,MAAAA,oBAAoB,EAAE;AAAEC,QAAAA,CAAC,EAAEZ,KAAK,CAACa,OAAX;AAAoBC,QAAAA,CAAC,EAAEd,KAAK,CAACe;AAA7B;AAJf,KAAD,CAAR;AAMAZ,IAAAA,UAAU,CAACf,iBAAiB,CAACC,MAAD,CAAlB,CAAV;AACAE,IAAAA,UAAU;AACX;;AAED,WAASyB,SAAT,CAAmBC,mBAAnB,EAAwCjB,KAAxC,EAA+C;AAC7CC,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE,SADC;AAEPS,MAAAA,mBAAmB,EAAnBA,mBAFO;AAGPN,MAAAA,oBAAoB,EAAE;AAAEC,QAAAA,CAAC,EAAEZ,KAAK,CAACa,OAAX;AAAoBC,QAAAA,CAAC,EAAEd,KAAK,CAACe;AAA7B;AAHf,KAAD,CAAR;AAKAZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAErB,OADX;AAEE,IAAA,aAAa,EAAE;AACbV,MAAAA,iBAAiB,EAAjBA;AADa,KAFjB;AAKE,IAAA,aAAa,EAAEkB,aALjB;AAME,IAAA,SAAS,EAAEU,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGd,OAAO,iBACN;AACE,IAAA,KAAK,EAAE;AACLkB,MAAAA,UAAU,EAAE,OADP;AAELC,MAAAA,QAAQ,EAAE,UAFL;AAGLC,MAAAA,QAAQ,EAAE,EAHL;AAILC,MAAAA,GAAG,EAAE,CAJA;AAKLC,MAAAA,KAAK,EAAE,CALF;AAMLC,MAAAA,OAAO,EAAE;AANJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIvB,OAAJ,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeF,KAAK,CAACQ,IADrB,iBAEGkB,IAAI,CAACC,SAAL,CAAe3B,KAAK,CAACW,oBAArB,CAFH,MAVF,CAVJ,eA0BE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMZ,UAAU,CAACJ,UAAD,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1BF,eA6BE;AAAQ,IAAA,QAAQ,EAAEG,OAAO,CAAC8B,MAAR,KAAmB,CAArC;AAAwC,IAAA,OAAO,EAAE;AAAA,aAAM7B,UAAU,CAAC,EAAD,CAAhB;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA7BF,CADF;AA6CD","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGlobe from 'react-globe';\n\nimport defaultMarkers from './markers';\n\nfunction getTooltipContent(marker) {\n  return `${marker.city}`;\n}\n\nfunction fetchStats() {\n  // fetch('https://api.covid19api.com/total/country/south-africa/status/confirmed?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z')\n  //   .then(res => res.json())\n  //   .then(stats => {\n  //     console.log(stats)\n  //     // setStats(stats)\n  //   })\n    console.log('hi')\n}\n\nexport default function Globe() {\n  const allMarkers = defaultMarkers.map(marker => ({\n    ...marker,\n    value: 1,\n  }));\n  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null);\n  const [stats, setStats] = useState(null);\n\n  function onClickMarker(marker, markerObject, event) {\n    setEvent({\n      type: 'CLICK',\n      marker,\n      markerObjectID: markerObject.uuid,\n      pointerEventPosition: { x: event.clientX, y: event.clientY },\n    });\n    setDetails(getTooltipContent(marker));\n    fetchStats()\n  }\n\n  function onDefocus(previousCoordinates, event) {\n    setEvent({\n      type: 'DEFOCUS',\n      previousCoordinates,\n      pointerEventPosition: { x: event.clientX, y: event.clientY },\n    });\n    setDetails(null);\n  }\n\n  return (\n    <div style={{ width: '98vw', height: '70vh' }}>\n      <ReactGlobe\n        markers={markers}\n        markerOptions={{\n          getTooltipContent,\n        }}\n        onClickMarker={onClickMarker}\n        onDefocus={onDefocus}\n      />\n      {details && (\n        <div\n          style={{\n            background: 'white',\n            position: 'absolute',\n            fontSize: 20,\n            top: 0,\n            right: 0,\n            padding: 12,\n          }}>\n          <p>{details}</p>\n          <p>\n            EVENT: type={event.type}, position=\n            {JSON.stringify(event.pointerEventPosition)})\n          </p>\n        </div>\n      )}\n      <button onClick={() => setMarkers(allMarkers)}>\n        Show markers\n      </button>\n      <button disabled={markers.length === 0} onClick={() => setMarkers([])}>\n        Clear markers\n      </button>\n      {/* <button\n        disabled={markers.length === randomMarkers.length}\n        onClick={() => setMarkers([...markers, randomMarkers[markers.length]])}>\n        Add marker\n      </button> */}\n      {/* <button\n        disabled={markers.length === 0}\n        onClick={() => setMarkers(markers.slice(0, markers.length - 1))}>\n        Remove marker\n      </button> */}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}